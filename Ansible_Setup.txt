Host Server Setup:

sudo su

## Mirror Cmds Centos ##
sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
yum install epel-release -y

yum update -y

#> yum install python3.9
or,
#> Install python3.11 and pip3 directly as
$ yum install python3.11 python3.11-pip
 no need to set env variables in this case

Check installation
pip3 --version

# install ansible 
$ pip3 install ansible

#> Setup env variable path for ansible
$ vi ~/.bashrc
add,
export A_HOME=/usr/local
export PATH=$PATH:$A_HOME/bin
then,
$ source ~/.bashrc

or,

Check ansible installation
ansible --version

Access Server via SSH Way#1
generate key under .ssh directory
$ cd /root/.ssh
$ ssh-keygen (do it with no passphrase)
$ cat keyfilename
copy the key content, 

go to remote server and add it
$ cd /root/.ssh
$ vi authorized_keys
paste the key and save

Access as
$ ssh <ip_of_remote_server>

Access Server via SSH Way#2
copy the content from a.pem file used to create remote server
and save it on host server in a.pem file.

Access as 
$ ssh -i key.pem username@<ip_of_remote_server>

After Setup How-Tos
1. ansible-galaxy role delete <github_user> <github_repo>
Purpose: Deletes a role from Ansible Galaxy, the online repository.
Scope: Remote â€“ This is an admin-level command used by the role owner (typically via API or web interface) to remove the role listing from the Galaxy website.
Effect: Once deleted, others can't download this role using ansible-galaxy install.
usage:
$ ansible-galaxy role delete myusername myrole

Note: You must be the owner of the GitHub repo or authorized user to do this.

2. ansible-galaxy remove <role_name>
Purpose: Removes a role from your local system, typically from ~/.ansible/roles/.
Scope: Local â€“ Affects your environment only.
Effect: Deletes the installed role directory, freeing up space or cleaning up unused roles.
usage:
$ ansible-galaxy remove geerlingguy.apache

Summary:
| Command                             | Affects        | Scope  | Use Case                                  |
| ----------------------------------- | -------------- | ------ | ----------------------------------------- |
| `ansible-galaxy role delete`        | Galaxy website | Remote | Delete your own role from Galaxy          |
| `ansible-galaxy remove <role_name>` | Local system   | Local  | Uninstall/remove a role from your machine |

Placement of roles:
Follow below structure. We can place project folder anywhere we want.
my-ansible-project/
â”œâ”€â”€ playbook.yml
â”œâ”€â”€ roles/
â”‚   â”œâ”€â”€ common/
â”‚   â””â”€â”€ webserver/

Other than project folder ansible looks for roles under below locations:
System-wide (for all users): /etc/ansible/roles/
User-specific: ~/.ansible/roles/


ðŸ“‚ files/ Folder inside role
Use the files/ directory when you want to copy static files to a target machine without modification.
Use Cases:
1> Copying configuration files that donâ€™t need any variable substitution
2> Deploying binary files, certificates, static assets, etc.

- name: Copy static config file
  ansible.builtin.copy:
    src: myapp.conf
    dest: /etc/myapp/myapp.conf

This assumes 'roles/myrole/files/myapp.conf' exists in files directory of a role.

ðŸ“‚ templates/ Folder
Use the templates/ directory when you want to render a file using Jinja2 templates with Ansible variables.
Use Cases:
1> Creating configuration files that depend on host variables, facts, or custom logic
2> Templates that change dynamically based on the environment or host

- name: Deploy templated config
  ansible.builtin.template:
    src: myapp.conf.j2
    dest: /etc/myapp/myapp.conf

This assumes roles/myrole/templates/myapp.conf.j2 contains Jinja2 code like:
[server]
port = {{ app_port }}

