Docker Setup on EC2 VM

system requirement: 4GB RAM 

how to install Docker Engine on Linux, also known as Docker CE (community edition now docker engine).
https://docs.docker.com/engine/install/

For CentOS:
https://docs.docker.com/engine/install/centos/

Uninstall if any previous installation present on existing server
> sudo dnf remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine

> Remove Images, containers, volumes, and networks stored in '/var/lib/docker/'

Create EC2 server

Setup repository urls for centos:
$ sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
$ sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
Optional
$ yum install epel-release -y

Update repo data cache
$ yum update -y

Install using the rpm repository
$ sudo dnf -y install dnf-plugins-core
$ sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

Install latest docker engine
> $ sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

Enable docker for start with system start 
$ sudo systemctl enable docker

Run docker service
$ sudo systemctl start docker

Verify that the installation is successful by running the hello-world image:
$ sudo docker run hello-world

Uninstall Docker Engine:
$ sudo dnf remove docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras

Delete all images, containers, and volumes:
Images, containers, volumes, or custom configuration files on your host aren't automatically removed.
$ sudo rm -rf /var/lib/docker
sudo rm -rf /var/lib/containerd

## Working with docker ##

Check running containers 
$ docker ps -a

Check docker images present in repository
$ docker images

Pull an image from docker registry
$ docker pull <image-name>

Run the image and enter bash mode
$ docker run -it <image-name> bash

Removing image
$ docker rmi <image-name> or <image-id>

Removing container 
$ docker rm <name> or <container-id>

